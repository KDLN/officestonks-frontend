import React from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import './App.css';

// Import pages
import Login from './pages/Login';
import Register from './pages/Register';
import Dashboard from './pages/Dashboard';
import StockList from './pages/StockList';
import StockDetail from './pages/StockDetail';
import Leaderboard from './pages/Leaderboard';
import Transactions from './pages/Transactions';
import Portfolio from './pages/Portfolio';
import Admin from './pages/Admin';
import AdminUsers from './pages/AdminUsers';

// Import components and contexts
import ProtectedRoute from './components/ProtectedRoute';
import AdminRoute from './components/AdminRoute';
import { AuthProvider, useAuth } from './contexts/AuthContext';

// Import global styles
import './styles/theme.css';

/**
 * Main App component for routing
 */
const AppRoutes = () => {
  const { isAuthenticated } = useAuth();
  
  return (
    <div className="App">
      <Routes>
        {/* Public routes */}
        <Route 
          path="/login" 
          element={!isAuthenticated ? <Login /> : <Navigate to="/dashboard" />} 
        />
        <Route 
          path="/register" 
          element={!isAuthenticated ? <Register /> : <Navigate to="/dashboard" />}
        />
        
        {/* Protected routes */}
        <Route path="/dashboard" element={<ProtectedRoute element={<Dashboard />} />} />
        <Route path="/stocks" element={<ProtectedRoute element={<StockList />} />} />
        <Route path="/stock/:id" element={<ProtectedRoute element={<StockDetail />} />} />
        <Route path="/portfolio" element={<ProtectedRoute element={<Portfolio />} />} />
        <Route path="/leaderboard" element={<ProtectedRoute element={<Leaderboard />} />} />
        <Route path="/transactions" element={<ProtectedRoute element={<Transactions />} />} />

        {/* Admin routes */}
        <Route path="/admin" element={<AdminRoute element={<Admin />} />} />
        <Route path="/admin/users" element={<AdminRoute element={<AdminUsers />} />} />

        {/* Default redirect */}
        <Route 
          path="*" 
          element={<Navigate to={isAuthenticated ? "/dashboard" : "/login"} />} 
        />
      </Routes>
    </div>
  );
};

/**
 * App wrapper with contexts
 */
const App = () => {
  return (
    <Router>
      <AuthProvider>
        <AppRoutes />
      </AuthProvider>
    </Router>
  );
};

export default App;