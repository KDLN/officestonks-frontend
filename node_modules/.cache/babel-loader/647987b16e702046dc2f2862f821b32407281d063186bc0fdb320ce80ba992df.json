{"ast":null,"code":"// Chat service for frontend\nimport { getToken } from './auth';\n\n// Make sure to include the correct API path\nconst BASE_URL = process.env.REACT_APP_API_URL || 'https://web-production-1e26.up.railway.app';\nconst API_URL = `${BASE_URL}/api`;\n\n// Get recent chat messages\nexport const getRecentMessages = async (limit = 50) => {\n  try {\n    const token = getToken();\n    const response = await fetch(`${API_URL}/chat/messages?limit=${limit}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch chat messages');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching chat messages:', error);\n    throw error;\n  }\n};\n\n// Send a chat message\nexport const sendChatMessage = async message => {\n  try {\n    const token = getToken();\n    const response = await fetch(`${API_URL}/chat/send`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        message\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to send chat message');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error sending chat message:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["getToken","BASE_URL","process","env","REACT_APP_API_URL","API_URL","getRecentMessages","limit","token","response","fetch","method","headers","ok","Error","json","error","console","sendChatMessage","message","body","JSON","stringify"],"sources":["/home/kdln/code/officestonks/frontend/src/services/chat.js"],"sourcesContent":["// Chat service for frontend\nimport { getToken } from './auth';\n\n// Make sure to include the correct API path\nconst BASE_URL = process.env.REACT_APP_API_URL || 'https://web-production-1e26.up.railway.app';\nconst API_URL = `${BASE_URL}/api`;\n\n// Get recent chat messages\nexport const getRecentMessages = async (limit = 50) => {\n  try {\n    const token = getToken();\n    \n    const response = await fetch(`${API_URL}/chat/messages?limit=${limit}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch chat messages');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching chat messages:', error);\n    throw error;\n  }\n};\n\n// Send a chat message\nexport const sendChatMessage = async (message) => {\n  try {\n    const token = getToken();\n    \n    const response = await fetch(`${API_URL}/chat/send`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        message,\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to send chat message');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error sending chat message:', error);\n    throw error;\n  }\n};"],"mappings":"AAAA;AACA,SAASA,QAAQ,QAAQ,QAAQ;;AAEjC;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,4CAA4C;AAC9F,MAAMC,OAAO,GAAG,GAAGJ,QAAQ,MAAM;;AAEjC;AACA,OAAO,MAAMK,iBAAiB,GAAG,MAAAA,CAAOC,KAAK,GAAG,EAAE,KAAK;EACrD,IAAI;IACF,MAAMC,KAAK,GAAGR,QAAQ,CAAC,CAAC;IAExB,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,wBAAwBE,KAAK,EAAE,EAAE;MACtEI,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUJ,KAAK;MAClC;IACF,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;IAClD;IAEA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,eAAe,GAAG,MAAOC,OAAO,IAAK;EAChD,IAAI;IACF,MAAMX,KAAK,GAAGR,QAAQ,CAAC,CAAC;IAExB,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,YAAY,EAAE;MACnDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUJ,KAAK;MAClC,CAAC;MACDY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBH;MACF,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAACV,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}