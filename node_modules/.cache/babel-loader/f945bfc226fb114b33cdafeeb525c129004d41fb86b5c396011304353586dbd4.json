{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import{getStockById,executeTrade,getUserPortfolio}from'../services/stock';import{initWebSocket,addListener,closeWebSocket}from'../services/websocket';import Navigation from'../components/Navigation';import'./StockDetail.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StockDetail=()=>{var _portfolio$portfolio_,_portfolio$portfolio_2,_portfolio$portfolio_3;const{id}=useParams();const navigate=useNavigate();const stockId=parseInt(id);const[stock,setStock]=useState(null);const[portfolio,setPortfolio]=useState(null);const[quantity,setQuantity]=useState(1);const[action,setAction]=useState('buy');const[loading,setLoading]=useState(true);const[executing,setExecuting]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const[priceChange,setPriceChange]=useState(null);// Fetch stock and portfolio data\nuseEffect(()=>{const fetchData=async()=>{try{const[stockData,portfolioData]=await Promise.all([getStockById(stockId),getUserPortfolio()]);setStock(stockData);setPortfolio(portfolioData);setLoading(false);}catch(err){setError('Failed to load stock data. Please try again later.');setLoading(false);}};fetchData();// Initialize WebSocket connection\ninitWebSocket();// Listen for stock price updates\nconst removeListener=addListener('stock_update',message=>{if(message.stock_id===stockId){setStock(prevStock=>{if(!prevStock)return null;// Determine price change direction\nconst direction=prevStock.current_price<message.price?'up':'down';setPriceChange(direction);// Clear price change indicator after animation\nsetTimeout(()=>setPriceChange(null),2000);return{...prevStock,current_price:message.price};});}});// Cleanup on unmount\nreturn()=>{removeListener();closeWebSocket();};},[stockId]);// Calculate max quantity for sell action\nconst maxSellQuantity=(portfolio===null||portfolio===void 0?void 0:(_portfolio$portfolio_=portfolio.portfolio_items)===null||_portfolio$portfolio_===void 0?void 0:(_portfolio$portfolio_2=_portfolio$portfolio_.find(item=>item.stock_id===stockId))===null||_portfolio$portfolio_2===void 0?void 0:_portfolio$portfolio_2.quantity)||0;// Calculate max buy quantity based on cash balance\nconst maxBuyQuantity=stock&&portfolio?Math.floor(portfolio.cash_balance/stock.current_price):0;// Update quantity if current value exceeds max\nuseEffect(()=>{if(action==='buy'&&quantity>maxBuyQuantity&&maxBuyQuantity>0){setQuantity(maxBuyQuantity);}else if(action==='sell'&&quantity>maxSellQuantity&&maxSellQuantity>0){setQuantity(maxSellQuantity);}},[action,maxBuyQuantity,maxSellQuantity,quantity]);// Handle trade execution\nconst handleTrade=async e=>{e.preventDefault();if(quantity<=0){setError('Quantity must be greater than zero');return;}if(action==='sell'&&quantity>maxSellQuantity){setError('You do not own enough shares to sell this quantity');return;}if(action==='buy'){const totalCost=stock.current_price*quantity;if(totalCost>portfolio.cash_balance){setError('You do not have enough cash for this purchase');return;}}setError(null);setSuccess(null);setExecuting(true);try{await executeTrade(stockId,quantity,action);// Refresh portfolio data after successful trade\nconst portfolioData=await getUserPortfolio();setPortfolio(portfolioData);setSuccess(`Successfully ${action==='buy'?'bought':'sold'} ${quantity} shares of ${stock.symbol}`);setExecuting(false);}catch(err){setError(err.message||'Failed to execute trade. Please try again.');setExecuting(false);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading stock data...\"});}if(!stock){return/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:\"Stock not found\"});}// Calculate total cost for the current transaction\nconst totalCost=stock.current_price*quantity;// Find if the user owns this stock\nconst ownedStock=portfolio===null||portfolio===void 0?void 0:(_portfolio$portfolio_3=portfolio.portfolio_items)===null||_portfolio$portfolio_3===void 0?void 0:_portfolio$portfolio_3.find(item=>item.stock_id===stockId);return/*#__PURE__*/_jsxs(\"div\",{className:\"stock-detail-page\",children:[/*#__PURE__*/_jsx(Navigation,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"stock-detail-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stock-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[stock.symbol,\" - \",stock.name,/*#__PURE__*/_jsx(\"span\",{className:\"sector-tag\",children:stock.sector})]}),/*#__PURE__*/_jsxs(\"div\",{className:`stock-price ${priceChange?`price-${priceChange}`:''}`,children:[\"$\",stock.current_price.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"trade-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-portfolio-summary\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Portfolio\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"cash-balance\",children:[\"Cash: \",/*#__PURE__*/_jsxs(\"b\",{children:[\"$\",portfolio===null||portfolio===void 0?void 0:portfolio.cash_balance.toFixed(2)]})]}),ownedStock&&/*#__PURE__*/_jsxs(\"div\",{className:\"owned-stock\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"You own: \",/*#__PURE__*/_jsxs(\"b\",{children:[ownedStock.quantity,\" shares\"]})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Value: \",/*#__PURE__*/_jsxs(\"b\",{children:[\"$\",(ownedStock.quantity*stock.current_price).toFixed(2)]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"trade-form-container\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Trade \",stock.symbol]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:success}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleTrade,className:\"trade-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"action\",children:\"Action\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"action\",value:action,onChange:e=>setAction(e.target.value),disabled:executing,children:[/*#__PURE__*/_jsx(\"option\",{value:\"buy\",children:\"Buy\"}),/*#__PURE__*/_jsx(\"option\",{value:\"sell\",disabled:!maxSellQuantity,children:\"Sell\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"quantity\",children:\"Quantity\"}),/*#__PURE__*/_jsx(\"input\",{id:\"quantity\",type:\"number\",min:\"1\",max:action==='buy'?maxBuyQuantity:maxSellQuantity,value:quantity,onChange:e=>setQuantity(parseInt(e.target.value)||1),disabled:executing}),/*#__PURE__*/_jsxs(\"span\",{className:\"max-quantity\",children:[\"Max: \",action==='buy'?maxBuyQuantity:maxSellQuantity]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Total \",action==='buy'?'Cost':'Proceeds']}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-cost\",children:[\"$\",totalCost.toFixed(2)]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:`trade-button ${action}-button`,disabled:executing||action==='buy'&&maxBuyQuantity===0||action==='sell'&&maxSellQuantity===0,children:executing?'Processing...':`${action==='buy'?'Buy':'Sell'} ${stock.symbol}`})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/stocks'),className:\"back-button\",children:\"Back to Stocks\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/portfolio'),className:\"portfolio-button\",children:\"View Portfolio\"})]})]})]});};export default StockDetail;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","getStockById","executeTrade","getUserPortfolio","initWebSocket","addListener","closeWebSocket","Navigation","jsx","_jsx","jsxs","_jsxs","StockDetail","_portfolio$portfolio_","_portfolio$portfolio_2","_portfolio$portfolio_3","id","navigate","stockId","parseInt","stock","setStock","portfolio","setPortfolio","quantity","setQuantity","action","setAction","loading","setLoading","executing","setExecuting","error","setError","success","setSuccess","priceChange","setPriceChange","fetchData","stockData","portfolioData","Promise","all","err","removeListener","message","stock_id","prevStock","direction","current_price","price","setTimeout","maxSellQuantity","portfolio_items","find","item","maxBuyQuantity","Math","floor","cash_balance","handleTrade","e","preventDefault","totalCost","symbol","className","children","ownedStock","name","sector","toFixed","onSubmit","htmlFor","value","onChange","target","disabled","type","min","max","onClick"],"sources":["/home/kdln/code/officestonks/frontend/src/pages/StockDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getStockById, executeTrade, getUserPortfolio } from '../services/stock';\nimport { initWebSocket, addListener, closeWebSocket } from '../services/websocket';\nimport Navigation from '../components/Navigation';\nimport './StockDetail.css';\n\nconst StockDetail = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const stockId = parseInt(id);\n\n  const [stock, setStock] = useState(null);\n  const [portfolio, setPortfolio] = useState(null);\n  const [quantity, setQuantity] = useState(1);\n  const [action, setAction] = useState('buy');\n  const [loading, setLoading] = useState(true);\n  const [executing, setExecuting] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [priceChange, setPriceChange] = useState(null);\n\n  // Fetch stock and portfolio data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [stockData, portfolioData] = await Promise.all([\n          getStockById(stockId),\n          getUserPortfolio()\n        ]);\n        \n        setStock(stockData);\n        setPortfolio(portfolioData);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load stock data. Please try again later.');\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n\n    // Initialize WebSocket connection\n    initWebSocket();\n\n    // Listen for stock price updates\n    const removeListener = addListener('stock_update', (message) => {\n      if (message.stock_id === stockId) {\n        setStock(prevStock => {\n          if (!prevStock) return null;\n          \n          // Determine price change direction\n          const direction = prevStock.current_price < message.price ? 'up' : 'down';\n          setPriceChange(direction);\n          \n          // Clear price change indicator after animation\n          setTimeout(() => setPriceChange(null), 2000);\n          \n          return {\n            ...prevStock,\n            current_price: message.price\n          };\n        });\n      }\n    });\n\n    // Cleanup on unmount\n    return () => {\n      removeListener();\n      closeWebSocket();\n    };\n  }, [stockId]);\n\n  // Calculate max quantity for sell action\n  const maxSellQuantity = portfolio?.portfolio_items\n    ?.find(item => item.stock_id === stockId)?.quantity || 0;\n\n  // Calculate max buy quantity based on cash balance\n  const maxBuyQuantity = stock && portfolio\n    ? Math.floor(portfolio.cash_balance / stock.current_price)\n    : 0;\n\n  // Update quantity if current value exceeds max\n  useEffect(() => {\n    if (action === 'buy' && quantity > maxBuyQuantity && maxBuyQuantity > 0) {\n      setQuantity(maxBuyQuantity);\n    } else if (action === 'sell' && quantity > maxSellQuantity && maxSellQuantity > 0) {\n      setQuantity(maxSellQuantity);\n    }\n  }, [action, maxBuyQuantity, maxSellQuantity, quantity]);\n\n  // Handle trade execution\n  const handleTrade = async (e) => {\n    e.preventDefault();\n    \n    if (quantity <= 0) {\n      setError('Quantity must be greater than zero');\n      return;\n    }\n\n    if (action === 'sell' && quantity > maxSellQuantity) {\n      setError('You do not own enough shares to sell this quantity');\n      return;\n    }\n\n    if (action === 'buy') {\n      const totalCost = stock.current_price * quantity;\n      if (totalCost > portfolio.cash_balance) {\n        setError('You do not have enough cash for this purchase');\n        return;\n      }\n    }\n    \n    setError(null);\n    setSuccess(null);\n    setExecuting(true);\n    \n    try {\n      await executeTrade(stockId, quantity, action);\n      \n      // Refresh portfolio data after successful trade\n      const portfolioData = await getUserPortfolio();\n      setPortfolio(portfolioData);\n      \n      setSuccess(`Successfully ${action === 'buy' ? 'bought' : 'sold'} ${quantity} shares of ${stock.symbol}`);\n      setExecuting(false);\n    } catch (err) {\n      setError(err.message || 'Failed to execute trade. Please try again.');\n      setExecuting(false);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading stock data...</div>;\n  }\n\n  if (!stock) {\n    return <div className=\"error\">Stock not found</div>;\n  }\n\n  // Calculate total cost for the current transaction\n  const totalCost = stock.current_price * quantity;\n\n  // Find if the user owns this stock\n  const ownedStock = portfolio?.portfolio_items?.find(item => item.stock_id === stockId);\n\n  return (\n    <div className=\"stock-detail-page\">\n      <Navigation />\n      <div className=\"stock-detail-container\">\n        <div className=\"stock-header\">\n          <h1>\n            {stock.symbol} - {stock.name}\n            <span className=\"sector-tag\">{stock.sector}</span>\n          </h1>\n          <div className={`stock-price ${priceChange ? `price-${priceChange}` : ''}`}>\n            ${stock.current_price.toFixed(2)}\n          </div>\n        </div>\n        \n        <div className=\"trade-container\">\n          <div className=\"user-portfolio-summary\">\n            <h2>Your Portfolio</h2>\n            <p className=\"cash-balance\">Cash: <b>${portfolio?.cash_balance.toFixed(2)}</b></p>\n            \n            {ownedStock && (\n              <div className=\"owned-stock\">\n                <p>You own: <b>{ownedStock.quantity} shares</b></p>\n                <p>Value: <b>${(ownedStock.quantity * stock.current_price).toFixed(2)}</b></p>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"trade-form-container\">\n            <h2>Trade {stock.symbol}</h2>\n            {error && <div className=\"error-message\">{error}</div>}\n            {success && <div className=\"success-message\">{success}</div>}\n            \n            <form onSubmit={handleTrade} className=\"trade-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"action\">Action</label>\n                <select \n                  id=\"action\" \n                  value={action} \n                  onChange={(e) => setAction(e.target.value)}\n                  disabled={executing}\n                >\n                  <option value=\"buy\">Buy</option>\n                  <option value=\"sell\" disabled={!maxSellQuantity}>Sell</option>\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"quantity\">Quantity</label>\n                <input \n                  id=\"quantity\" \n                  type=\"number\" \n                  min=\"1\" \n                  max={action === 'buy' ? maxBuyQuantity : maxSellQuantity}\n                  value={quantity} \n                  onChange={(e) => setQuantity(parseInt(e.target.value) || 1)}\n                  disabled={executing}\n                />\n                <span className=\"max-quantity\">\n                  Max: {action === 'buy' ? maxBuyQuantity : maxSellQuantity}\n                </span>\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Total {action === 'buy' ? 'Cost' : 'Proceeds'}</label>\n                <div className=\"total-cost\">${totalCost.toFixed(2)}</div>\n              </div>\n              \n              <button \n                type=\"submit\" \n                className={`trade-button ${action}-button`}\n                disabled={\n                  executing || \n                  (action === 'buy' && maxBuyQuantity === 0) || \n                  (action === 'sell' && maxSellQuantity === 0)\n                }\n              >\n                {executing ? 'Processing...' : `${action === 'buy' ? 'Buy' : 'Sell'} ${stock.symbol}`}\n              </button>\n            </form>\n          </div>\n        </div>\n        \n        <div className=\"action-buttons\">\n          <button onClick={() => navigate('/stocks')} className=\"back-button\">\n            Back to Stocks\n          </button>\n          <button onClick={() => navigate('/portfolio')} className=\"portfolio-button\">\n            View Portfolio\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StockDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}