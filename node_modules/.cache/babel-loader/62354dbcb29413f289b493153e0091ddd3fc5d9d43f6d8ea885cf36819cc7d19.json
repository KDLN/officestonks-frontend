{"ast":null,"code":"var _jsxFileName = \"/home/kdln/code/officestonks/frontend/src/pages/StockDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getStockById, executeTrade, getUserPortfolio } from '../services/stock';\nimport { initWebSocket, addListener, closeWebSocket } from '../services/websocket';\nimport Navigation from '../components/Navigation';\nimport './StockDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockDetail = () => {\n  _s();\n  var _portfolio$portfolio_, _portfolio$portfolio_2, _portfolio$portfolio_3;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const stockId = parseInt(id);\n  const [stock, setStock] = useState(null);\n  const [portfolio, setPortfolio] = useState(null);\n  const [quantity, setQuantity] = useState(1);\n  const [action, setAction] = useState('buy');\n  const [loading, setLoading] = useState(true);\n  const [executing, setExecuting] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [priceChange, setPriceChange] = useState(null);\n\n  // Fetch stock and portfolio data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [stockData, portfolioData] = await Promise.all([getStockById(stockId), getUserPortfolio()]);\n        setStock(stockData);\n        setPortfolio(portfolioData);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load stock data. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchData();\n\n    // Initialize WebSocket connection\n    initWebSocket();\n\n    // Listen for stock price updates\n    const removeListener = addListener('stock_update', message => {\n      if (message.stock_id === stockId) {\n        setStock(prevStock => {\n          if (!prevStock) return null;\n\n          // Determine price change direction\n          const direction = prevStock.current_price < message.price ? 'up' : 'down';\n          setPriceChange(direction);\n\n          // Clear price change indicator after animation\n          setTimeout(() => setPriceChange(null), 2000);\n          return {\n            ...prevStock,\n            current_price: message.price\n          };\n        });\n      }\n    });\n\n    // Cleanup on unmount\n    return () => {\n      removeListener();\n      closeWebSocket();\n    };\n  }, [stockId]);\n\n  // Calculate max quantity for sell action\n  const maxSellQuantity = (portfolio === null || portfolio === void 0 ? void 0 : (_portfolio$portfolio_ = portfolio.portfolio_items) === null || _portfolio$portfolio_ === void 0 ? void 0 : (_portfolio$portfolio_2 = _portfolio$portfolio_.find(item => item.stock_id === stockId)) === null || _portfolio$portfolio_2 === void 0 ? void 0 : _portfolio$portfolio_2.quantity) || 0;\n\n  // Calculate max buy quantity based on cash balance\n  const maxBuyQuantity = stock && portfolio ? Math.floor(portfolio.cash_balance / stock.current_price) : 0;\n\n  // Update quantity if current value exceeds max\n  useEffect(() => {\n    if (action === 'buy' && quantity > maxBuyQuantity && maxBuyQuantity > 0) {\n      setQuantity(maxBuyQuantity);\n    } else if (action === 'sell' && quantity > maxSellQuantity && maxSellQuantity > 0) {\n      setQuantity(maxSellQuantity);\n    }\n  }, [action, maxBuyQuantity, maxSellQuantity, quantity]);\n\n  // Handle trade execution\n  const handleTrade = async e => {\n    e.preventDefault();\n    if (quantity <= 0) {\n      setError('Quantity must be greater than zero');\n      return;\n    }\n    if (action === 'sell' && quantity > maxSellQuantity) {\n      setError('You do not own enough shares to sell this quantity');\n      return;\n    }\n    if (action === 'buy') {\n      const totalCost = stock.current_price * quantity;\n      if (totalCost > portfolio.cash_balance) {\n        setError('You do not have enough cash for this purchase');\n        return;\n      }\n    }\n    setError(null);\n    setSuccess(null);\n    setExecuting(true);\n    try {\n      await executeTrade(stockId, quantity, action);\n\n      // Refresh portfolio data after successful trade\n      const portfolioData = await getUserPortfolio();\n      setPortfolio(portfolioData);\n      setSuccess(`Successfully ${action === 'buy' ? 'bought' : 'sold'} ${quantity} shares of ${stock.symbol}`);\n      setExecuting(false);\n    } catch (err) {\n      setError(err.message || 'Failed to execute trade. Please try again.');\n      setExecuting(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading stock data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 12\n    }, this);\n  }\n  if (!stock) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"Stock not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Calculate total cost for the current transaction\n  const totalCost = stock.current_price * quantity;\n\n  // Find if the user owns this stock\n  const ownedStock = portfolio === null || portfolio === void 0 ? void 0 : (_portfolio$portfolio_3 = portfolio.portfolio_items) === null || _portfolio$portfolio_3 === void 0 ? void 0 : _portfolio$portfolio_3.find(item => item.stock_id === stockId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-detail-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-detail-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [stock.symbol, \" - \", stock.name, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sector-tag\",\n            children: stock.sector\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stock-price ${priceChange ? `price-${priceChange}` : ''}`,\n          children: [\"$\", stock.current_price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trade-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-portfolio-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Your Portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"cash-balance\",\n            children: [\"Cash: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"$\", portfolio === null || portfolio === void 0 ? void 0 : portfolio.cash_balance.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), ownedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"owned-stock\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"You own: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [ownedStock.quantity, \" shares\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Value: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\"$\", (ownedStock.quantity * stock.current_price).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trade-form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Trade \", stock.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 23\n          }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success-message\",\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleTrade,\n            className: \"trade-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"action\",\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"action\",\n                value: action,\n                onChange: e => setAction(e.target.value),\n                disabled: executing,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"buy\",\n                  children: \"Buy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"sell\",\n                  disabled: !maxSellQuantity,\n                  children: \"Sell\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"quantity\",\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"quantity\",\n                type: \"number\",\n                min: \"1\",\n                max: action === 'buy' ? maxBuyQuantity : maxSellQuantity,\n                value: quantity,\n                onChange: e => setQuantity(parseInt(e.target.value) || 1),\n                disabled: executing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"max-quantity\",\n                children: [\"Max: \", action === 'buy' ? maxBuyQuantity : maxSellQuantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Total \", action === 'buy' ? 'Cost' : 'Proceeds']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-cost\",\n                children: [\"$\", totalCost.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: `trade-button ${action}-button`,\n              disabled: executing || action === 'buy' && maxBuyQuantity === 0 || action === 'sell' && maxSellQuantity === 0,\n              children: executing ? 'Processing...' : `${action === 'buy' ? 'Buy' : 'Sell'} ${stock.symbol}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/stocks'),\n          className: \"back-button\",\n          children: \"Back to Stocks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/portfolio'),\n          className: \"portfolio-button\",\n          children: \"View Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(StockDetail, \"mOOPSHpwSu0mQ7BlmiwF1L6wPlI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = StockDetail;\nexport default StockDetail;\nvar _c;\n$RefreshReg$(_c, \"StockDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","getStockById","executeTrade","getUserPortfolio","initWebSocket","addListener","closeWebSocket","Navigation","jsxDEV","_jsxDEV","StockDetail","_s","_portfolio$portfolio_","_portfolio$portfolio_2","_portfolio$portfolio_3","id","navigate","stockId","parseInt","stock","setStock","portfolio","setPortfolio","quantity","setQuantity","action","setAction","loading","setLoading","executing","setExecuting","error","setError","success","setSuccess","priceChange","setPriceChange","fetchData","stockData","portfolioData","Promise","all","err","removeListener","message","stock_id","prevStock","direction","current_price","price","setTimeout","maxSellQuantity","portfolio_items","find","item","maxBuyQuantity","Math","floor","cash_balance","handleTrade","e","preventDefault","totalCost","symbol","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ownedStock","name","sector","toFixed","onSubmit","htmlFor","value","onChange","target","disabled","type","min","max","onClick","_c","$RefreshReg$"],"sources":["/home/kdln/code/officestonks/frontend/src/pages/StockDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getStockById, executeTrade, getUserPortfolio } from '../services/stock';\nimport { initWebSocket, addListener, closeWebSocket } from '../services/websocket';\nimport Navigation from '../components/Navigation';\nimport './StockDetail.css';\n\nconst StockDetail = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const stockId = parseInt(id);\n\n  const [stock, setStock] = useState(null);\n  const [portfolio, setPortfolio] = useState(null);\n  const [quantity, setQuantity] = useState(1);\n  const [action, setAction] = useState('buy');\n  const [loading, setLoading] = useState(true);\n  const [executing, setExecuting] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [priceChange, setPriceChange] = useState(null);\n\n  // Fetch stock and portfolio data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [stockData, portfolioData] = await Promise.all([\n          getStockById(stockId),\n          getUserPortfolio()\n        ]);\n        \n        setStock(stockData);\n        setPortfolio(portfolioData);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load stock data. Please try again later.');\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n\n    // Initialize WebSocket connection\n    initWebSocket();\n\n    // Listen for stock price updates\n    const removeListener = addListener('stock_update', (message) => {\n      if (message.stock_id === stockId) {\n        setStock(prevStock => {\n          if (!prevStock) return null;\n          \n          // Determine price change direction\n          const direction = prevStock.current_price < message.price ? 'up' : 'down';\n          setPriceChange(direction);\n          \n          // Clear price change indicator after animation\n          setTimeout(() => setPriceChange(null), 2000);\n          \n          return {\n            ...prevStock,\n            current_price: message.price\n          };\n        });\n      }\n    });\n\n    // Cleanup on unmount\n    return () => {\n      removeListener();\n      closeWebSocket();\n    };\n  }, [stockId]);\n\n  // Calculate max quantity for sell action\n  const maxSellQuantity = portfolio?.portfolio_items\n    ?.find(item => item.stock_id === stockId)?.quantity || 0;\n\n  // Calculate max buy quantity based on cash balance\n  const maxBuyQuantity = stock && portfolio\n    ? Math.floor(portfolio.cash_balance / stock.current_price)\n    : 0;\n\n  // Update quantity if current value exceeds max\n  useEffect(() => {\n    if (action === 'buy' && quantity > maxBuyQuantity && maxBuyQuantity > 0) {\n      setQuantity(maxBuyQuantity);\n    } else if (action === 'sell' && quantity > maxSellQuantity && maxSellQuantity > 0) {\n      setQuantity(maxSellQuantity);\n    }\n  }, [action, maxBuyQuantity, maxSellQuantity, quantity]);\n\n  // Handle trade execution\n  const handleTrade = async (e) => {\n    e.preventDefault();\n    \n    if (quantity <= 0) {\n      setError('Quantity must be greater than zero');\n      return;\n    }\n\n    if (action === 'sell' && quantity > maxSellQuantity) {\n      setError('You do not own enough shares to sell this quantity');\n      return;\n    }\n\n    if (action === 'buy') {\n      const totalCost = stock.current_price * quantity;\n      if (totalCost > portfolio.cash_balance) {\n        setError('You do not have enough cash for this purchase');\n        return;\n      }\n    }\n    \n    setError(null);\n    setSuccess(null);\n    setExecuting(true);\n    \n    try {\n      await executeTrade(stockId, quantity, action);\n      \n      // Refresh portfolio data after successful trade\n      const portfolioData = await getUserPortfolio();\n      setPortfolio(portfolioData);\n      \n      setSuccess(`Successfully ${action === 'buy' ? 'bought' : 'sold'} ${quantity} shares of ${stock.symbol}`);\n      setExecuting(false);\n    } catch (err) {\n      setError(err.message || 'Failed to execute trade. Please try again.');\n      setExecuting(false);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading stock data...</div>;\n  }\n\n  if (!stock) {\n    return <div className=\"error\">Stock not found</div>;\n  }\n\n  // Calculate total cost for the current transaction\n  const totalCost = stock.current_price * quantity;\n\n  // Find if the user owns this stock\n  const ownedStock = portfolio?.portfolio_items?.find(item => item.stock_id === stockId);\n\n  return (\n    <div className=\"stock-detail-page\">\n      <Navigation />\n      <div className=\"stock-detail-container\">\n        <div className=\"stock-header\">\n          <h1>\n            {stock.symbol} - {stock.name}\n            <span className=\"sector-tag\">{stock.sector}</span>\n          </h1>\n          <div className={`stock-price ${priceChange ? `price-${priceChange}` : ''}`}>\n            ${stock.current_price.toFixed(2)}\n          </div>\n        </div>\n        \n        <div className=\"trade-container\">\n          <div className=\"user-portfolio-summary\">\n            <h2>Your Portfolio</h2>\n            <p className=\"cash-balance\">Cash: <b>${portfolio?.cash_balance.toFixed(2)}</b></p>\n            \n            {ownedStock && (\n              <div className=\"owned-stock\">\n                <p>You own: <b>{ownedStock.quantity} shares</b></p>\n                <p>Value: <b>${(ownedStock.quantity * stock.current_price).toFixed(2)}</b></p>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"trade-form-container\">\n            <h2>Trade {stock.symbol}</h2>\n            {error && <div className=\"error-message\">{error}</div>}\n            {success && <div className=\"success-message\">{success}</div>}\n            \n            <form onSubmit={handleTrade} className=\"trade-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"action\">Action</label>\n                <select \n                  id=\"action\" \n                  value={action} \n                  onChange={(e) => setAction(e.target.value)}\n                  disabled={executing}\n                >\n                  <option value=\"buy\">Buy</option>\n                  <option value=\"sell\" disabled={!maxSellQuantity}>Sell</option>\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"quantity\">Quantity</label>\n                <input \n                  id=\"quantity\" \n                  type=\"number\" \n                  min=\"1\" \n                  max={action === 'buy' ? maxBuyQuantity : maxSellQuantity}\n                  value={quantity} \n                  onChange={(e) => setQuantity(parseInt(e.target.value) || 1)}\n                  disabled={executing}\n                />\n                <span className=\"max-quantity\">\n                  Max: {action === 'buy' ? maxBuyQuantity : maxSellQuantity}\n                </span>\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Total {action === 'buy' ? 'Cost' : 'Proceeds'}</label>\n                <div className=\"total-cost\">${totalCost.toFixed(2)}</div>\n              </div>\n              \n              <button \n                type=\"submit\" \n                className={`trade-button ${action}-button`}\n                disabled={\n                  executing || \n                  (action === 'buy' && maxBuyQuantity === 0) || \n                  (action === 'sell' && maxSellQuantity === 0)\n                }\n              >\n                {executing ? 'Processing...' : `${action === 'buy' ? 'Buy' : 'Sell'} ${stock.symbol}`}\n              </button>\n            </form>\n          </div>\n        </div>\n        \n        <div className=\"action-buttons\">\n          <button onClick={() => navigate('/stocks')} className=\"back-button\">\n            Back to Stocks\n          </button>\n          <button onClick={() => navigate('/portfolio')} className=\"portfolio-button\">\n            View Portfolio\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StockDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}